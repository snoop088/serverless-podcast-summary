AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: AWS App for Summarising YouTube Podcasts
# Parameters:
#   MediaConvertRoleArn:
#     Type: String
#     Description: The ARN for the role previously to pass to MediaConvert so it can access to resources in your account
Resources:
  VideoSourceContainer:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: video-source-container
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  SoundOutputContainer:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: sound-transcribed-output
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  TranscribedTextsContainer:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: transcribed-texts-container
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  SoundStrip:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main.lambda_handler
      Runtime: python3.11
      CodeUri: sound-strip
      MemorySize: 128
      Timeout: 30
      Layers:
        - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:python-sound-manipulation:3
      Policies:
        - AWSLambdaBasicExecutionRole
        - AmazonS3FullAccess

  SoundTranscriber:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main.lambda_handler
      Runtime: python3.11
      CodeUri: sound-transcriber
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt SoundTranscriberRole.Arn
      Events:
        S3PutObject:
          Type: S3
          Properties:
            Bucket: !Ref VideoSourceContainer
            Events: s3:ObjectCreated:Put

  TranscribeSummariser:
    Type: AWS::Serverless::Function
    Properties:
      Handler: main.lambda_handler
      Runtime: python3.11
      CodeUri: transcribe-summariser
      MemorySize: 128
      Timeout: 30
      Role: !GetAtt TranscribeSummariserRole.Arn
      Events:
        S3PutObject:
          Type: S3
          Properties:
            Bucket: !Ref SoundOutputContainer
            Events: s3:ObjectCreated:Put
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .json
            # Filter:
            #   S3Key:
            #     Rules:
            #       - Name: prefix
            #         Value: jobs/
  # ReactAmplifyFrontEnd:
  #   Type: AWS::CloudFormation::Stack
  #   properties:
  #     TemplateURL: XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  #     Parameters:
  #       AppName: "podcast-summariser"
  #       Env: "prod"
  #       UnauthRoleArn: !GetAtt ReactAmplifyFrontEndRole.Arn
  #       DependentServices: "[]"

  SoundTranscriberRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - transcribe.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyName: TranscribeServicePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - transcribe:StartTranscriptionJob
                  - transcribe:GetTranscriptionJob
                  - transcribe:ListTranscriptionJobs
                  - transcribe:DeleteTranscriptionJob
                Resource: "*"

  TranscribeSummariserRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyName: BedrockInvokeModelPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: BedrockService
                Effect: Allow
                Action:
                  - bedrock:InvokeModel
                Resource: "*"
              # - Sid: TranscribeService
              #   Effect: Allow
              #   Action:
              #     - transcribe:GetTranscriptionJob
